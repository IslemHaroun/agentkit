name: Docker Compose CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  docker-compose-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Create env file
      run: |
        touch .env
        echo "DATABASE_USER=${{ secrets.DATABASE_USER }}" >> .env
        echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
        echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
        echo "EXT_ENDPOINT1=${{ secrets.EXT_ENDPOINT1 }}" >> .env
        echo "LOCAL_1=${{ secrets.LOCAL_1 }}" >> .env
        echo "LOCAL_2=${{ secrets.LOCAL_2 }}" >> .env
        cp .env frontend/.env

    - name: Build the stack
      run: docker compose build

    - name: Validate compose file
      run: docker compose config

    - name: Start containers
      run: |
        docker compose up -d
        sleep 30  # Attendre que les conteneurs d√©marrent

    - name: Check running containers
      run: docker compose ps

    - name: Check service health
      run: |
        curl -f http://localhost:3000 || exit 1
        curl -f http://localhost:9090 || exit 1
        curl -f http://localhost:3002 || exit 1

    - name: Show logs on failure
      if: failure()
      run: docker compose logs

    - name: Clean up
      if: always()
      run: docker compose down -v